name: Calcium

on:
  workflow_dispatch:
    inputs:
      num1:
        description: 'Enter the first number'
        required: true
        default: '0'
      num2:
        description: 'Enter the second number'
        required: true
        default: '0'
      operation:
        description: 'Enter operation (add, subtract, multiply, divide)'
        required: true
        default: 'add'

jobs:
  calculate:
    runs-on: ubuntu-latest
    steps:
    - name: Validate inputs num1
      run: |
          number_regex='^[0-9]+$'
          if [[ ! "${{ github.event.inputs.num1 }}" =~ $number_regex ]]; then
            echo "Input is not a valid number: ${{ github.event.inputs.num1 }}"
            exit 1  # Exit with a non-zero code to fail the job
          fi
    - name: Use the Validated Input
      run: echo "The input num1 was a valid number:${{ github.event.inputs.num1 }}"
      
    - name: Validate inputs num2
      run: |
          number_regex='^[0-9]+$'
          if [[ ! "${{ github.event.inputs.num2 }}" =~ $number_regex ]]; then
            echo "Input is not a valid number: ${{ github.event.inputs.num2 }}"
            exit 1  # Exit with a non-zero code to fail the job
          fi
    - name: Use the Validated Input
      run: echo "The input num2 was a valid number:${{ github.event.inputs.num2 }}"

    - name: Perform Calculation
      run: |
        num1=${{ github.event.inputs.num1 }}
        num2=${{ github.event.inputs.num2 }}
        operation=${{ github.event.inputs.operation }}

        if [ "$operation" == "add" ]; then
          result=$(echo "$num1 + $num2" | bc)
        elif [ "$operation" == "subtract" ]; then
          result=$(echo "$num1 - $num2" | bc)
        elif [ "$operation" == "multiply" ]; then
          result=$(echo "$num1 * $num2" | bc)
        elif [ "$operation" == "divide" ]; then
          if [ "$num2" == "0" ]; then
            echo "Error: Division by zero"
            exit 1
          fi
          result=$(echo "scale=2; $num1 / $num2" )
        else
          echo "Invalid operation"
          exit 1
        fi

        echo "Result: $result"
